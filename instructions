#docker run -d --name aserver --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:rw quay.io/centos/centos /sbin/init
#docker run -d --name node1 --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:rw quay.io/centos/centos /sbin/init
#docker run -d --name node2 --privileged --cgroupns=host -v /sys/fs/cgroup:/sys/fs/cgroup:rw quay.io/centos/centos /sbin/init

#docker exec -it aserver bash
  sudo for giving admin access to user, iptuils for ping command, net-tools for ifconfig command, nfs we will use it for mounting our folder from base system so that our config file and yaml files will be persistent
  > #yum -y install iputils vim net-tools firewalld openssh-server openssh-clients sudo epel-release nfs-utils -y
  By default root login is disabled for security reason, so let's enable it for our practice
  > #vim /etc/ssh/sshd_config
  Go to line no 40 PermitRootLogin remove comment and make yes
  > #systemctl start sshd firewalld
  > #systemctl enable sshd firewalld
  > #passwd -> to set password for root
    give redhat
  > #yum install ansible-core -y
  > #exit

#docker exec -it node1 bash
  > #yum -y install iputils vim net-tools firewalld openssh-server openssh-clients sudo epel-release nfs-utils -y
  By default root login is disabled for security reason, so let's enable it for our practice
  > #vim /etc/ssh/sshd_config
  Go to line no 40 PermitRootLogin remove comment and make yes
  > #systemctl start sshd firewalld
  > #systemctl enable sshd firewalld
  > #passwd -> to set password for root
    give redhat
  > #exit

#docker exec -it node2 bash
  > #yum -y install iputils vim net-tools firewalld openssh-server openssh-clients sudo epel-release nfs-utils -y
  By default root login is disabled for security reason, so let's enable it for our practice
  > #vim /etc/ssh/sshd_config
  Go to line no 40 PermitRootLogin remove comment and make yes
  > #systemctl start sshd firewalld
  > #systemctl enable sshd firewalld
  > #passwd -> to set password for root
    give redhat
  > #exit

Create NFS server on base machine:
#yum install nfs* -y
#mkdir /myshare
#vim /etc/expoerts
/myshare *(rw,sync)
#systemctl restart nfs-server
#systemctl enable nfs-server
  
Run below commands to get IP address of node1 and node2:
#docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' node1
#docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' node2

Copy both IP address
#docker exec -it aserver bash
  > #vim /etc/hosts
    NODE1IP node1
    NODE2IP node2
  > #ssh-keygen
  > #ssh-copy-id root@node1
  > #ssh-copy-id root@node2
  > #mkdir /mymount
  > #mount -t nfs <BASE MACHINE IP>:/myshare /mymount 
  > #df -h -> we will see it's mounted
  > #vim /etc/ansible/hosts
  node1
  node2
  #ansible all -m ping

Let's build our own image using these containers:
#docker commit aserver docker.io/gauravkumar9130/aserver
#docker commit node1 docker.io/gauravkumar9130/anode1
#docker commit node2 docker.io/gauravkumar9130/anode2

#docker login 
#docker push docker.io/gauravkumar9130/aserver
#docker push docker.io/gauravkumar9130/anode2
#docker push docker.io/gauravkumar9130/anode2
